{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/grid/conway.ts","./src/app/grid/grid.component.ts","./src/app/grid/grid.component.html","./src/app/grid/grid.ts","./src/app/grid/timer.ts","./src/app/iteration-speed/iteration-speed.component.ts","./src/app/iteration-speed/iteration-speed.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ng-conway';\n}\n","  <h1>\n    Welcome to {{ title }}!\n  </h1>\n<app-grid cols=\"30\" rows=\"20\"></app-grid>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { GridComponent } from './grid/grid.component';\nimport { IterationSpeedComponent } from './iteration-speed/iteration-speed.component';\n\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    GridComponent,\n    IterationSpeedComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatSliderModule,\n    MatProgressBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Grid } from './grid';\nimport { TimerSingleton } from './timer';\n\nexport function NewCellValue(isAlive: boolean, neighbours: number): boolean {\n  if (!isAlive && neighbours === 3) {\n    return true;\n  }\n\n  if (!isAlive) { return false; }\n\n  if (neighbours < 2 || neighbours > 3) {\n    return false;\n  }\n\n  return isAlive;\n}\n\nexport class Conway {\n  constructor (public grid: Grid) {\n  }\n\n  startIterate(timeout: number) {\n    const callBack = this.iterate.bind(this);\n    TimerSingleton.Instance.repeat('conway', timeout, callBack);\n  }\n\n  stopIterate() {\n    TimerSingleton.Instance.stop('conway');\n  }\n\n  public iterate() {\n    console.log('Iterate');\n    const newGrid = new Grid(this.grid.rows, this.grid.cols);\n    for (let r = 0; r < this.grid.rows; r++) {\n      for (let c = 0; c < this.grid.cols; c++) {\n        const numNeighbours = this.grid.numberOfLiveNeighbours(r, c);\n\n        const isAlive = this.grid.getCell(r, c);\n\n        newGrid.setCell(r, c, NewCellValue(isAlive, numNeighbours));\n      }\n    }\n\n    if (this.grid.equals(newGrid)) {\n      this.stopIterate();\n    }\n\n    this.grid.setWithGrid(newGrid);\n  }\n}\n","import { Component, OnInit, Input, NgZone } from '@angular/core';\nimport { Grid } from './grid';\nimport { Conway } from './conway';\nimport { TimerSingleton } from './timer';\n\n@Component({\n  selector: 'app-grid',\n  templateUrl: './grid.component.html',\n  styleUrls: ['./grid.component.css']\n})\nexport class GridComponent implements OnInit {\n  @Input() rows = 10;\n  @Input() cols = 10;\n  @Input() waitMillisAfterSwitchCell = 3000;\n  @Input() waitMillisBetweenIterations = 1000;\n\n  public grid: Grid;\n  public progressValue = 0;\n  private conway: Conway;\n\n  constructor(private zone: NgZone) { }\n\n  ngOnInit() {\n    this.grid = new Grid(this.rows, this.cols);\n    this.conway = new Conway(this.grid);\n\n    this.conway.startIterate(this.waitMillisBetweenIterations);\n  }\n\n  switchCell(r: number, c: number) {\n    this.restartTimer(true);\n\n    this.grid.switchCell(r, c);\n\n    this.setupProgressBar();\n  }\n\n  private setupProgressBar() {\n    TimerSingleton.Instance.stop('progressBar');\n\n    this.progressValue = 100;\n    const progressTicksNumber = Math.floor(this.waitMillisAfterSwitchCell/1000.0);\n    const progressValueDelta = 100.0/progressTicksNumber;\n    const progressTicksMillis = Math.floor(this.waitMillisAfterSwitchCell/progressTicksNumber);\n\n    TimerSingleton.Instance.repeatNTimes('progressBar', progressTicksNumber, progressTicksMillis,\n      () => { \n        this.progressValue-=progressValueDelta;\n        console.log(this.progressValue);\n      });\n\n  }\n\n  restartTimer(waitBeforeStart = false) {\n    this.conway.stopIterate();\n\n    TimerSingleton.Instance.stop('startConwayIteration');\n\n    const startIterate = this.conway.startIterate.bind(this.conway, this.waitMillisBetweenIterations);\n\n    TimerSingleton.Instance.once('startConwayIteration', waitBeforeStart ? this.waitMillisAfterSwitchCell : 0, startIterate);\n  }\n\n  getCSSClass(r: number, c: number) {\n    return (this.grid.getCell(r, c) ? 'cell-live' : 'cell-dead');\n  }\n\n  getWidth(): string {\n    return (100.0 / this.cols) + '%';\n  }\n\n  speedChanged(speed: number) {\n    this.waitMillisBetweenIterations = speed;\n    this.restartTimer();\n    console.log(speed);\n  }\n\n}\n","<table class=\"table table-bordered\">\n\n  <tr *ngFor=\"let gridRow of grid.grid; let r = index\">\n    <td *ngFor=\"let gridCell of gridRow; let c = index\" [ngStyle]=\"{'width': getWidth()}\">\n      <div (click)=\"switchCell(r, c)\" [ngClass]=\"getCSSClass(r, c)\">&nbsp;</div>\n    </td>\n  </tr>\n\n</table>\n\n<app-iteration-speed (speedChange)=\"speedChanged($event)\"></app-iteration-speed>\n\n<mat-progress-bar *ngIf=\"progressValue > 0\" mode=\"determinate\" [value]=\"progressValue\"></mat-progress-bar>\n\n","export class Cell {\n  constructor(private _cell = false) {}\n\n  get cell(): boolean {\n    return this._cell;\n  }\n\n  set cell(cell: boolean) {\n    this._cell = cell;\n  }\n\n  public toString(): string {\n    return '' + this._cell;\n  }\n}\n\nexport const BREAK = false;\nexport const CONTINUE = true;\n\nexport class Grid {\n  grid: Cell[][];\n\n  constructor (public readonly rows = 10, public readonly cols = 10) {\n    this.grid = [];\n\n    for (let r = 0; r < rows; r++) {\n      this.grid.push([]);\n\n      for (let c = 0; c < cols; c++) {\n        this.grid[r].push(new Cell());\n      }\n    }\n  }\n\n  public eachCell = (f: (r: number, c: number, cell: Cell) => boolean) => {\n    for (let r = 0; r < this.rows; r++) {\n      for (let c = 0; c < this.cols; c++) {\n        if (f(r, c, this.grid[r][c]) === BREAK) { return; }\n      }\n    }\n  }\n\n  public setWithGrid(newGrid: Grid) {\n    this.eachCell((r, c, cell) => {\n      cell.cell = newGrid.getCell(r, c);\n      return CONTINUE;\n    });\n  }\n\n  public isInGrid(row: number, col: number): boolean {\n    return row >= 0 && row < this.rows && col >= 0 && col < this.cols;\n  }\n\n  public setCell(row: number, col: number, val: boolean) {\n    if (this.isInGrid(row, col)) {\n      this.grid[row][col].cell = val;\n    }\n  }\n\n  public switchCell(row: number, col: number) {\n    this.setCell(row, col, !this.getCell(row, col));\n  }\n\n  public getCell(row: number, col: number): boolean {\n    return this.isInGrid(row, col) && this.grid[row][col].cell;\n  }\n\n  public numberOfLiveNeighbours(row: number, col: number): number {\n    let neighbours = 0;\n\n    for (let r = - 1; r < 2; r++) {\n      for (let c = -1; c < 2; c++) {\n        if (r === 0 && c === 0) {continue; }\n\n        neighbours += this.getCell(row + r, col + c) ? 1 : 0;\n      }\n    }\n\n    return neighbours;\n  }\n\n  public toString(): string {\n    return this.grid.join(',');\n  }\n\n  public equals(otherGrid: Grid): boolean {\n    if (otherGrid.rows !== this.rows || otherGrid.cols !== this.cols) {\n      return false;\n    }\n\n    return this.toString() === otherGrid.toString();\n  }\n\n}\n","import { typeWithParameters } from '@angular/compiler/src/render3/util';\n\nclass Timer {\n  constructor (public readonly jsTimerId, public fireNumber = -1) {}\n}\n\nexport class TimerSingleton {\n    private static _instance: TimerSingleton = new TimerSingleton();\n    private timers: {[key: string]: Timer} = {};\n\n    private constructor() {}\n\n    public static get Instance() {\n        return TimerSingleton._instance;\n    }\n\n    public repeat(timerId: string, intervalInMillis: number, callBack: () => void) {\n      this.startTimer(timerId, intervalInMillis, callBack, -1);\n    }\n\n    public repeatNTimes(timerId: string, n: number, intervalInMillis: number, callBack: () => void) {\n      this.startTimer(timerId, intervalInMillis, callBack, n);\n    }\n\n    public once(timerId: string, intervalInMillis: number, callBack: () => void) {\n      this.startTimer(timerId, intervalInMillis, callBack, 1);\n    }\n\n    private startTimer(timerId: string, intervalInMillis: number, callBack: () => void, number = -1) {\n      if (this.timers[timerId]) {\n        this.stop(timerId);\n      }\n\n      const wrappedCallBack = () => {\n        const timer = this.timers[timerId];\n\n        if (!timer) return;\n\n        if (timer.fireNumber > -1) {\n          timer.fireNumber--;\n        }\n        if (timer.fireNumber === 0) {\n          this.stop(timerId);\n        }\n        callBack()\n      };\n\n      let jsTimerId;\n\n      if (number > 0) {\n          jsTimerId = setInterval(wrappedCallBack, intervalInMillis);\n        } else {\n          jsTimerId = setInterval(callBack, intervalInMillis);\n        }\n\n      this.timers[timerId] = new Timer(jsTimerId, number);\n    }\n\n    public stop(timerId: string) {\n      if (this.timers[timerId]) {\n        const jsTimerId = this.timers[timerId].jsTimerId;\n\n        clearInterval(jsTimerId);\n\n        delete this.timers[timerId];\n      }\n    }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MatSliderChange } from '@angular/material/slider';\n\n@Component({\n  selector: 'app-iteration-speed',\n  templateUrl: './iteration-speed.component.html',\n  styleUrls: ['./iteration-speed.component.css']\n})\nexport class IterationSpeedComponent implements OnInit {\n  value = 1000;\n\n  @Output() speedChange = new EventEmitter<number>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  formatLabel(value: number | null) {\n    if (!value) {\n      return 0;\n    }\n\n    if (value >= 1000) {\n      return Math.round(value / 1000) + 'k';\n    }\n\n    return value;\n  }\n\n  onChange(event: MatSliderChange) {\n    console.log(event);\n    this.speedChange.emit(event.value);\n  }\n\n}\n","<mat-slider\n  thumbLabel\n  [displayWith]=\"formatLabel\"\n  tickInterval=\"10\"\n  min=\"10\"\n  max=\"1000\"\n  value=\"200\"\n  (change)=\"onChange($event)\"></mat-slider>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}